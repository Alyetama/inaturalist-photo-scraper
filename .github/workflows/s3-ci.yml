name: S3 CI

on:
  workflow_dispatch:
    inputs:
      pages:
        description: 'Array of page numbers to process'
        required: true
        default: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]'
      years:
        description: 'Array of years to process'
        required: false
        default: '[2022]'
      taxonId:
        description: 'Taxon ID'
        required: false
      bucketName:
        description: 'S3 bucket name'
        required: false

jobs:
  provide_matrices:
    runs-on: ubuntu-latest
    steps:
      - id: set-pages
        run: echo "::set-output name=pages::${{ github.event.inputs.pages }}"
      - id: set-years
        run: echo "::set-output name=years::${{ github.event.inputs.years }}"
    outputs:
      pages: ${{ steps.set-pages.outputs.pages }}
      years: ${{ steps.set-years.outputs.years }}


  ci:
    needs: provide_matrices
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        page: ${{ fromJson(needs.provide_matrices.outputs.pages) }}
        year: ${{ fromJson(needs.provide_matrices.outputs.years) }}

    steps:
      - uses: actions/checkout@v3

      - name: taxon ID is provided as an input
        if: ${{ github.event.inputs.taxonId != '' }}
        run: echo "TAXON_ID=${{ github.event.inputs.taxonId }}" >> $GITHUB_ENV
      - name: taxon ID is provided as a secret
        if: ${{ github.event.inputs.taxonId == '' }}
        run: echo "TAXON_ID=${{ secrets.TAXON_ID }}" >> $GITHUB_ENV

      - name: S3 bucket name is provided as an input
        if: ${{ github.event.inputs.bucketName != '' }}
        run: echo "S3_BUCKET_NAME=${{ github.event.inputs.bucketName }}" >> $GITHUB_ENV
      - name: S3 bucket name is provided as a secret
        if: ${{ github.event.inputs.bucketName == '' }}
        run: echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> $GITHUB_ENV

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "inaturalist>=0.1.10"

      - name: Run scraper
        env:
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          S3_LOGS_BUCKET_NAME: ${{ secrets.S3_LOGS_BUCKET_NAME }}
          MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING }}
          S3_BUCKET_NAME: ${{ env.S3_BUCKET_NAME }}
          TAXON_ID: ${{ env.TAXON_ID }}
          PAGE: ${{ matrix.page }}
          YEAR: ${{ matrix.year }}
        run: |
          inat -t $TAXON_ID \
            --resume-from-page $PAGE \
            --start-year $YEAR \
            --upload-to-s3 --one-page-only --one-year-only
